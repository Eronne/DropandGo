{% extends 'template.html.twig' %}

{% block title %} - Storage{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/storage.css') }}">
{% endblock %}

{% block body %}
    <div class="ui top fixed menu">
        <a href="{{ path('homepage') }}" class="item">Drop&Go</a>
        <a href="{{ path('help') }}" class="item">Aide</a>

        {% if app.user %}
            <a href="{{ path('storage') }}" class="item">{{ 'nav.access' | trans() }}</a>
            <a href="{{ path('fos_user_security_logout') }}" class="item">{{ 'nav.logout' | trans() }}</a>
        {% else %}
            <a href="{{ path('fos_user_registration_register') }}" class="item">{{ 'nav.signup' | trans() }}</a>
            <a href="{{ path('fos_user_security_login') }}" class="item">{{ 'nav.login' | trans() }}</a>
        {% endif %}
    </div>


    <div class="main">
        {# Modal #}
        <a href="#" class="show-modal"><i class="cloud upload icon"></i></a>
        <div class="ui basic modal">
            <div class="ui icon header">
                <i class="upload icon"></i>
                Mettre un fichier en ligne
            </div>
            <form id="upload-form" class="ui form">
                <div class="content">
                    <p>Avec le service gratuit d'heroku, on ne peut pas mettre en ligne des fichiers de plus d'un Mo.</p>
                    <input id="file" type="file" class="file" name="file">
                    <div class="action">
                        <div class="ui red basic cancel inverted button">
                            <i class="remove icon"></i>
                            Retour
                        </div>
                        <input type="submit" class="ui green ok inverted button">
                    </div>

                    <div id="progress-box" style="display: none;">
                        <h3>Progress</h3>
                        <div class="progress">
                            <div id="progress-value" class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div id="errors-box" style="display: none;">
                        <div class="alert alert-danger" id="errors"></div>
                    </div>
                    <div id="upload-complete-box" style="display: none;">
                        <div class="alert alert-success" id="upload-complete"></div>
                    </div>
                    {#<div class="modal-footer">#}
                    {#<button class="modal-action modal-close waves-effect waves-green btn-flat" type="submit" name="action">Envoyer<i class="material-icons right">send</i>#}
                    {#</button>#}
                    {#<a href="#" class="modal-action modal-close waves-effect waves-green btn-flat">Retour</a>#}
                    {#</div>#}
                </div>
            </form>
        </div>



        <h2>Fichiers mis en ligne par {{ app.user }}</h2>
        <div style="display: none" id="alert-box">
            <div class="alert alert-danger">File does not longer exists.</div>
        </div>

        <div class="cards">
            {% for file in files %}
                <div class="ui card" href="{{ path('download', {"key": file.key}) }}">
                    <div class="content">
                        <div class="header"><h4>{{ file.path }}</h4></div>
                        <div class="meta">
                            <span class="category">{{ 'storage.key' | trans }} : {{ file.key }}</span>
                        </div>
                    </div>
                    <div class="extra content">
                    <span class="right floated">
                        {% if not file.deleted %}
                            <a class="" href="{{ path('download', {"key": file.key}) }}"><i class="download icon"></i></a>
                            <a id="{{ file.key }}" class="btn-delete" onclick="confirm('Etes-vous sÃ»r de vouloir supprimer ce fichiers ?')"><i class="delete icon"></i></a>
                        {% else %}
                            deleted
                        {% endif %}
                    </span>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        {# Modal #}
        $('.ui.modal')
            .modal({
                blurring: true
            })
            .modal('attach events', '.show-modal', 'show');


        {# Upload #}
        $(function () {
            document.getElementById('progress-value').style = "width: 0%";
            document.getElementById('upload-form').addEventListener('submit', onSubmit);

            function onSubmit(event) {
                event.preventDefault();
                resetAlertBox();

                var formData = new FormData();
                formData.append("test", "tests");
                formData.append("upload[file]", document.getElementById("file").files[0]);
                console.log(formData.get('upload[file]'));
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "/upload");
                xhr.addEventListener('load', onRequestComplete, false);
                xhr.upload.addEventListener("load", onUploadComplete, false);
                xhr.upload.addEventListener("progress", onUploadProgress, false);
                xhr.send(formData);
                console.log(formData);
            }

            function onUploadProgress(event) {
                if (event.lengthComputable) {
                    $('#progress-box').css('display', 'block');
                    var percentComplete = event.loaded / event.total;
                    document.getElementById('progress-value').style = "width: "+parseFloat(percentComplete*100).toFixed(2)+"%";
                }
            }

            function onUploadComplete() {
                $('#upload-complete-box').css('display', 'block');
            }

            function onRequestComplete(event) {
                if(event.target.status === 201) {
                    location.reload();
                }
            }

            function resetAlertBox() {
                $('#errors-box').css('display', 'none');
                $('#upload-complete-box').css('display', 'none');
                $('#progress-box').css('display', 'none');
            }
        });



        $(function() {
            $('.btn-delete').on('click', function () {
                var keyToDelete = $(this).attr('id');
                $.ajax({
                    url: "/"+keyToDelete,
                    method: "DELETE",
                    error: function (xhr, statusCode, errorThrown) {
                        $('#alert-box').css('display', 'block');
                    },
                    success: function (data, statusCode, xhr) {
                        $('a#'+keyToDelete+'').parent().parent().parent().remove();
                    }
                });
            });
        });
    </script>
{% endblock %}